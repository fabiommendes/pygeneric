import sys
from invoke import run, task
from python_boilerplate.tasks import *

cfg = """
# Configuration options for the tasks.py script


[py2src]
fixes =
    newstyle
    kwargs
    division
    metaclass
    unpacking
    super
    annotations
encoding = utf-8
"""
from invoke import task, run
import configparser
parser = configparser.ConfigParser()
config = parser.read_string(cfg)

@task
def configure(ctx):
    """
    Instructions for preparing package for development.
    """

    run("%s -m pip install .[dev] -r requirements.txt" % sys.executable)


@task
def py2src():
    """
    update the Python 2 source tree at py2src.
    """

    # Get all fixes
    fixes = config['py2src', 'fixes']
    if isinstance(fixes, str):
        if ',' in fixes:
            fixes = [x.strip(', ') for x in fixes.split(',')]
        else:
            fixes = fixes.split()
    else:
        fixes = list(fixes)
    fixes = ' '.join('-f %s' % fix for fix in fixes)

    # Move source to py2src folder and patch encoding
    run('cp src/ py2src/ -R')
    run('3to2 py2src/ --no-diffs -j4 -w %s' % fixes)

